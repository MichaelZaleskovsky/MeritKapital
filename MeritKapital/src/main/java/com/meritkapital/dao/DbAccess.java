package com.meritkapital.dao;

import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * Mock class whic simulate real access to the Database
 * @author Zaleskovskiy Mikhail
 *
 */
public class DbAccess {
	Date[] hdE = {
		new Calendar.Builder().setDate(2016,0,1).build().getTime(),
		new Calendar.Builder().setDate(2016,2,25).build().getTime(),
		new Calendar.Builder().setDate(2016,2,28).build().getTime(),
		new Calendar.Builder().setDate(2016,4,1).build().getTime(),
		new Calendar.Builder().setDate(2016,11,25).build().getTime(),
		new Calendar.Builder().setDate(2016,11,26).build().getTime(),
		new Calendar.Builder().setDate(2017,0,1).build().getTime(),
		new Calendar.Builder().setDate(2017,3,14).build().getTime(),
		new Calendar.Builder().setDate(2017,3,17).build().getTime(),
		new Calendar.Builder().setDate(2017,4,1).build().getTime(),
		new Calendar.Builder().setDate(2017,11,25).build().getTime(),
		new Calendar.Builder().setDate(2017,11,26).build().getTime(),
		new Calendar.Builder().setDate(2018,0,1).build().getTime(),
		new Calendar.Builder().setDate(2018,2,30).build().getTime(),
		new Calendar.Builder().setDate(2018,3,2).build().getTime(),
		new Calendar.Builder().setDate(2018,4,1).build().getTime(),
		new Calendar.Builder().setDate(2018,11,25).build().getTime(),
		new Calendar.Builder().setDate(2018,11,26).build().getTime(),
		new Calendar.Builder().setDate(2019,0,1).build().getTime(),
		new Calendar.Builder().setDate(2019,3,19).build().getTime(),
		new Calendar.Builder().setDate(2019,3,22).build().getTime(),
		new Calendar.Builder().setDate(2019,4,1).build().getTime(),
		new Calendar.Builder().setDate(2019,11,25).build().getTime(),
		new Calendar.Builder().setDate(2019,11,26).build().getTime()
	};
	Date[] hdU = {
		new Calendar.Builder().setDate(2016,0,1).build().getTime(),
		new Calendar.Builder().setDate(2016,0,18).build().getTime(),
		new Calendar.Builder().setDate(2016,1,15).build().getTime(),
		new Calendar.Builder().setDate(2016,4,30).build().getTime(),
		new Calendar.Builder().setDate(2016,6,4).build().getTime(),
		new Calendar.Builder().setDate(2016,8,5).build().getTime(),
		new Calendar.Builder().setDate(2016,9,10).build().getTime(),
		new Calendar.Builder().setDate(2016,10,11).build().getTime(),
		new Calendar.Builder().setDate(2016,10,24).build().getTime(),
		new Calendar.Builder().setDate(2016,11,26).build().getTime(),
		new Calendar.Builder().setDate(2017,0,2).build().getTime(),
		new Calendar.Builder().setDate(2017,0,16).build().getTime(),
		new Calendar.Builder().setDate(2017,1,20).build().getTime(),
		new Calendar.Builder().setDate(2017,4,29).build().getTime(),
		new Calendar.Builder().setDate(2017,6,4).build().getTime(),
		new Calendar.Builder().setDate(2017,8,4).build().getTime(),
		new Calendar.Builder().setDate(2017,9,9).build().getTime(),
		new Calendar.Builder().setDate(2017,10,11).build().getTime(),
		new Calendar.Builder().setDate(2017,10,23).build().getTime(),
		new Calendar.Builder().setDate(2017,11,25).build().getTime(),
		new Calendar.Builder().setDate(2018,0,1).build().getTime(),
		new Calendar.Builder().setDate(2018,0,15).build().getTime(),
		new Calendar.Builder().setDate(2018,1,19).build().getTime(),
		new Calendar.Builder().setDate(2018,4,28).build().getTime(),
		new Calendar.Builder().setDate(2018,6,4).build().getTime(),
		new Calendar.Builder().setDate(2018,8,3).build().getTime(),
		new Calendar.Builder().setDate(2018,9,8).build().getTime(),
		new Calendar.Builder().setDate(2018,10,12).build().getTime(),
		new Calendar.Builder().setDate(2018,10,22).build().getTime(),
		new Calendar.Builder().setDate(2018,11,25).build().getTime(),
		new Calendar.Builder().setDate(2019,0,1).build().getTime(),
		new Calendar.Builder().setDate(2019,0,21).build().getTime(),
		new Calendar.Builder().setDate(2019,1,18).build().getTime(),
		new Calendar.Builder().setDate(2019,4,27).build().getTime(),
		new Calendar.Builder().setDate(2019,6,4).build().getTime(),
		new Calendar.Builder().setDate(2019,8,2).build().getTime(),
		new Calendar.Builder().setDate(2019,9,14).build().getTime(),
		new Calendar.Builder().setDate(2019,10,11).build().getTime(),
		new Calendar.Builder().setDate(2019,10,28).build().getTime(),
		new Calendar.Builder().setDate(2019,11,25).build().getTime(),
	};
	Set<Date> EuroHoliday = new HashSet<>(Arrays.asList(hdE));
	Set<Date> UsdHoliday = new HashSet<>(Arrays.asList(hdU));
	
	String[] ss = {"PLUTO1", "PLUTO2"};
	Set<String> customers = new HashSet<>(Arrays.asList(ss));
	
	String[] Iso = {
			"AFN",
			"EUR",
			"ALL",
			"DZD",
			"USD",
			"EUR",
			"AOA",
			"XCD",
			"XCD",
			"ARS",
			"AMD",
			"AWG",
			"AUD",
			"EUR",
			"AZN",
			"BSD",
			"BHD",
			"BDT",
			"BBD",
			"BYR",
			"EUR",
			"BZD",
			"XOF",
			"BMD",
			"BTN",
			"INR",
			"BOB",
			"BOV",
			"USD",
			"BAM",
			"BWP",
			"NOK",
			"BRL",
			"USD",
			"BND",
			"BGN",
			"XOF",
			"BIF",
			"KHR",
			"XAF",
			"CAD",
			"CVE",
			"KYD",
			"XAF",
			"XAF",
			"CLF",
			"CLP",
			"CNY",
			"AUD",
			"AUD",
			"COP",
			"COU",
			"KMF",
			"XAF",
			"CDF",
			"NZD",
			"CRC",
			"XOF",
			"HRK",
			"CUC",
			"CUP",
			"ANG",
			"EUR",
			"CZK",
			"DKK",
			"DJF",
			"XCD",
			"DOP",
			"USD",
			"EGP",
			"SVC",
			"USD",
			"XAF",
			"ERN",
			"EUR",
			"ETB",
			"EUR",
			"FKP",
			"DKK",
			"FJD",
			"EUR",
			"EUR",
			"EUR",
			"XPF",
			"EUR",
			"XAF",
			"GMD",
			"GEL",
			"EUR",
			"GHS",
			"GIP",
			"EUR",
			"DKK",
			"XCD",
			"EUR",
			"USD",
			"GTQ",
			"GBP",
			"GNF",
			"XOF",
			"GYD",
			"HTG",
			"USD",
			"AUD",
			"EUR",
			"HNL",
			"HKD",
			"HUF",
			"ISK",
			"INR",
			"IDR",
			"XDR",
			"IRR",
			"IQD",
			"EUR",
			"GBP",
			"ILS",
			"EUR",
			"JMD",
			"JPY",
			"GBP",
			"JOD",
			"KZT",
			"KES",
			"AUD",
			"KPW",
			"KRW",
			"KWD",
			"KGS",
			"LAK",
			"EUR",
			"LBP",
			"LSL",
			"ZAR",
			"LRD",
			"LYD",
			"CHF",
			"EUR",
			"EUR",
			"MOP",
			"MKD",
			"MGA",
			"MWK",
			"MYR",
			"MVR",
			"XOF",
			"EUR",
			"USD",
			"EUR",
			"MRO",
			"MUR",
			"EUR",
			"XUA",
			"MXN",
			"MXV",
			"USD",
			"MDL",
			"EUR",
			"MNT",
			"EUR",
			"XCD",
			"MAD",
			"MZN",
			"MMK",
			"NAD",
			"ZAR",
			"AUD",
			"NPR",
			"EUR",
			"XPF",
			"NZD",
			"NIO",
			"XOF",
			"NGN",
			"NZD",
			"AUD",
			"USD",
			"NOK",
			"OMR",
			"PKR",
			"USD",
			"PAB",
			"USD",
			"PGK",
			"PYG",
			"PEN",
			"PHP",
			"NZD",
			"PLN",
			"EUR",
			"USD",
			"QAR",
			"EUR",
			"RON",
			"RUB",
			"RWF",
			"EUR",
			"SHP",
			"XCD",
			"XCD",
			"EUR",
			"EUR",
			"XCD",
			"WST",
			"EUR",
			"STD",
			"SAR",
			"XOF",
			"RSD",
			"SCR",
			"SLL",
			"SGD",
			"ANG",
			"XSU",
			"EUR",
			"EUR",
			"SBD",
			"SOS",
			"ZAR",
			"SSP",
			"EUR",
			"LKR",
			"SDG",
			"SRD",
			"NOK",
			"SZL",
			"SEK",
			"CHE",
			"CHF",
			"CHW",
			"SYP",
			"TWD",
			"TJS",
			"TZS",
			"THB",
			"USD",
			"XOF",
			"NZD",
			"TOP",
			"TTD",
			"TND",
			"TRY",
			"TMT",
			"USD",
			"AUD",
			"UGX",
			"UAH",
			"AED",
			"GBP",
			"USD",
			"USN",
			"USD",
			"UYI",
			"UYU",
			"UZS",
			"VUV",
			"VEF",
			"VND",
			"USD",
			"USD",
			"XPF",
			"MAD",
			"YER",
			"ZMW",
			"ZWL",
			"XBA",
			"XBB",
			"XBC",
			"XBD",
			"XTS",
			"XXX",
			"XAU",
			"XPD",
			"XPT",
			"XAG"

	};

	Set<String> Iso4217 = new HashSet<>(Arrays.asList(Iso));
	
	/**
	 * Method return the list of banking holidays for a specific currency
	 * @param str - 3-letters currency code
	 * @return - Set with dates of all banking holidays during 2016, 2017, 2018, 2019 years
	 */
	public Set<Date> getHolidays(String str){
		switch(str) {
			case "EUR": return EuroHoliday;
			default: return UsdHoliday;
		}
	}
	
	/**
	 * @return - Set of valid customer's names
	 */
	public Set<String> getCustomers(){
		return customers;
	}
	
	/**
	 * @return - Set of valid currency codes according ISO 4217
	 */
	public Set<String> getIso4217(){
		return Iso4217;
	}
}

